
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>confluent vs powergraph</title>



    <style>

      .vis{
            /*margin-right: 5px;*/
            display: inline-block;
            vertical-align: top;
            /*border-width:1px;
            border-style:solid;
            border-color:black*/
            /*width: 40%;*/
        }
        #number_trial{
          color: #999797;
          position: absolute;
        }

    </style>


</head>
  <body>
    <div class="bandeau-top" style="position:absolute; top:0%;left:30%; height:20px; background-color:grey; color:white; text-align: center; padding:3px;">
     If you don't see the right graph, unZoom in your nagivator
     </div>

      <div id="popup1" class="overlay">
        <div class="popup">
        <!--  <h2>Oupssss .... <i class="fa fa-frown-o" aria-hidden="true"></i></h2> -->
          <a id="close_popup" class='close'>&times;</a>
          <div class="content" >
              <span id="edges_no_classified"></span> edges have not been tagged ...
          </div>
        </div>
      </div>
      <div id="number_trial">
        <span>Trial : <%= trial %> / <%= max_trial %></span><br/>
        <span>User : <%= id_user %> </span>
      </div>
      <!--
      <div id="header">
        <div id="header_left"><%= header %></div>
        <div id="header_right"><%= description %></div>
      </div> -->

      <div class="clear"></div>
  	  <div class="vis" id="visFrame"></div>

      <div class="vertical-line" style="height: 1200px;"></div>

      <svg class="vis"></svg>
      <div class="clear"></div>
      <button class="flat_button" id="next_trial"> Next Trial </button>
      <button class="flat_button" id="add_tag"> Add Tag </button>

  </body>
  <!--
  <script src="https://threejs.org/build/three.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script src="https://d3js.org/d3.v3.min.js"></script>
  <script src="https://cdn.rawgit.com/tgdwyer/WebCola/master/WebCola/cola.min.js"></script>
  -->
  <script src="class/Sparkiz.js"></script>
  <script src="lib/expe.js"></script>

  <script src="lib/three.min.js"></script>
  <script src="lib/jquery.min.js"></script>
  <script src="lib/d3.min.js"></script>
  <script src="lib/cola.min.js"></script>

  <!-- <link rel="stylesheet" type="text/css" href="lib/fa/css/font-awesome.min.css"> -->
  <link rel="stylesheet" type="text/css" href="lib/expe.css">
  <link rel="stylesheet" type="text/css" href="lib/popup.css">
	<script>



   //d3.json("data/data_expe.json", function(json) {
var data_path = <%- JSON.stringify(data) %>;
console.log(data_path)
$.get( '/data/'+data_path, function(data) {
 var infoStaticVariable = {}
 var app = flownet.force("#visFrame", 950 ,900, "black",0)
      .nodes(data.nodes)
      .links(data.links)

      .layout("linkDistance", 200)
      .create_layout()
      .tracks("count", 1 )

      .create_WEBGL_element()


      .link_properties("curvature", 5)
      .link_properties("color", "#b5b5b5")
      .link_properties("size", 3)


      .node_properties("color", "#999797")
      .node_properties("size", 7)
      //.nodes_mapping("label", function(d, i) {return d.id; })

      // .roads_mapping("opacity", 0)
      // .roads_mapping("color", "#66c2a5")

      .controls(false)
      .node_properties("x", function(d, i) {return d.X; })
      .node_properties("y", function(d, i) {return - d.Y;  })
      // // .nodes_mapping("x", function(d, i) {console.log("D VALUE", d); return d.px; })
      // .nodes_mapping("y", function(d, i) {return d.py;  })
      // // .particle_mapping("color", function(d, i) {return color_scale(d.speed); })
      .particles("color", function(d, i) {return d.color; })
      .particles("size", 10)
      .particles("frequency", function(d, i) {return d.frequency; })
      .particles("pattern", function(d, i) {return d.temporal; })
      .particles("speed", function(d, i) {return d.speed; })

      //.particle_mapping("texture", "images/rectangle_texture.png")

      .start_particle_delay(10000)
      .start(0);
      //console.log("YOOOOOOO", app.sparkiz.get_nodes());

        // $( "#play" ).html("<i class='fa fa-play' aria-hidden='true'></i>");
        // $( "#pause" ).html("<i class='fa fa-pause' aria-hidden='true'></i>");
      setTimeout(function(){
        nodes_position = app.sparkiz.get_nodes()
        links_position = app.sparkiz.get_links()

        console.log(nodes_position)
        console.log("NOOOODES", links_position)
        graphD3 = new d3_graph(nodes_position, links_position, 900);


        // // PERMET DE FIXER LES NOEUDS
        // for (var i =0; i< nodes_position.length; i++){
        //   nodes_position[i].id= nodes_position[i].index;
        //   nodes_position[i].X = nodes_position[i].x;
        //   nodes_position[i].Y = nodes_position[i].y;
        //   delete nodes_position[i].index;
        //   delete nodes_position[i].x;
        //   delete nodes_position[i].y;
        //   delete nodes_position[i].px;
        //   delete nodes_position[i].py;
        //   delete nodes_position[i].fixed;
        //   delete nodes_position[i].weight;
        // }
        // for (var i =0; i< links_position.length; i++){
        //
        //   links_position[i].source = links_position[i].source.id;
        //   links_position[i].target = links_position[i].target.id;
        //   console.log(links_position[i]);
        // }
        // console.log(data.nodes)
        // console.log(JSON.stringify(nodes_position))
        // $.ajax({
        //     url: "/create_json_file",
        //     type: "POST",
        //     dataType: "json",
        //     data: {"nodes" :JSON.stringify(nodes_position), "links": JSON.stringify(links_position), "path" : data_path},
        //     success: function (data) {console.log("RESULT", data); },
        //     error: function (xhr, status, error) {console.log('Error: ' + error.message);},
        // });


        //console.log("HEYY")
      }, 0);



   });

   $( "#close_popup" ).click(function() {
      d3.select('#popup1').style("display","none");
  });
   $( "#next_trial" ).click(function() {
     // PERMET DE CONVERTIR LES ID DES ETIQUETTES EN LEUR GROUPES
     graphD3.convert_to_group();
     console.log(graphD3.edge_array)

     for (var i=0; i< graphD3.edge_array.length; i++){
       //for (var j=0; j< graphD3.edge_array[i].rank.length; j++){
         console.log(graphD3.edge_array[i].id, " IS ", graphD3.edge_array[i].rank[0])
       //}
     }

     var edges_infos = graphD3.has_all_edge();
     //console.log(graphD3.edge_array);

      if (edges_infos.no_classified != 0) {
        d3.select('#popup1').style("display","block");
        $( "#edges_no_classified").text(edges_infos.no_classified)
        //console.log(edges_infos);
      }
      else{
       send_data({"links": graphD3.edge_array, "nodes": graphD3.node_array});
     }



   });
   $( "#add_tag" ).click(function() {
     var array = [];
     //Je crée dix étiquettes par dix étiquettes
     for (var i=0; i < graphD3.edge_array.length; i++) {array.push({"group" : graphD3.iteration_tag})}
     // push le group dans l'array
     graphD3.tooltip_array = graphD3.tooltip_array.concat(array);
     //graphD3.tooltip_array.push();
     console.log(graphD3.tooltip_array, graphD3.edge_id_group)
     graphD3.populate_tag();
     graphD3.iteration_tag += 1;
   });


   function send_data(dat){
     console.log(dat)
       $.ajax({
           url: "/store_data",
           type: "POST",
           dataType: "json",
           data: dat,
           //success: function (data) {console.log("RESULT", data); window.location = data.redirection;},
           success: function (data) {console.log("RESULT", data); window.location = data.redirection;},
           error: function (xhr, status, error) {console.log('Error: ' + error.message);},
       });
   }




	</script>



</html>
