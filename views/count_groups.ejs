
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>confluent vs powergraph</title>



    <style>

      .vis{
            /*margin-right: 5px;*/
            display: inline-block;
            vertical-align: top;
            /*border-width:1px;
            border-style:solid;
            border-color:black*/
            /*width: 40%;*/
        }
				.number_groups{
					position:absolute;
					width: 600px;
					top:405px;
					left:1050px;
          color: #999797;
				}
        #number_trial{
          color: #999797;
          position: absolute;
        }
        #count_down{
          color: white;
          position: absolute;
          top: 105px;
          left: 1050px;
          font-size: 50px;
        }
    </style>


</head>
  <body>
    <div id="popup1" class="overlay">
      <div class="popup">
      <!--  <h2>Oupssss .... <i class="fa fa-frown-o" aria-hidden="true"></i></h2> -->
        <a id="close_popup" class='close'>&times;</a>
        <div class="content" >
            <span id="entry"></span>
        </div>
      </div>
    </div>

    <div id="count_down">   </div>

    <div id="number_trial">
      <span>Trial : <%= trial %> / <%= max_trial %></span><br/>
      <span>User : <%= id_user %> </span>
    </div>
      <div class="clear"></div>
  	  <div class="vis" id="visFrame"></div>

			<div class="vertical-line" style="height: 1200px;"></div>

      <div class="clear"></div>
			<div class="number_groups">
				<span> Report the number of different <span style="text-transform: lowercase;"><%- header %></span> that you can find in 45 seconds :</span>
	  		<input id="number_groups" type="text" name="number_groups" placeholder="Number Groups"><br/>
			</div>
			<button type="submit" class="flat_button" id="next_trial" style='	top: 500px;left: 1200px;'> Ok </button>




  </body>
  <!--
  <script src="https://threejs.org/build/three.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script src="https://d3js.org/d3.v3.min.js"></script>
  <script src="https://cdn.rawgit.com/tgdwyer/WebCola/master/WebCola/cola.min.js"></script>
  -->
  <script src="class/Sparkiz.js"></script>

  <script src="lib/three.min.js"></script>
  <script src="lib/jquery.min.js"></script>
  <script src="lib/d3.min.js"></script>
  <script src="lib/cola.min.js"></script>

  <!-- <link rel="stylesheet" type="text/css" href="lib/fa/css/font-awesome.css"> -->
  <link rel="stylesheet" type="text/css" href="lib/expe.css">
  <link rel="stylesheet" type="text/css" href="lib/popup.css">
	<script>


var trial = String(<%= trial %>);
   //d3.json("data/data_expe.json", function(json) {
var data_path = <%- JSON.stringify(data) %>;
var app;
console.log(data_path)
$.get( '/data/'+data_path, function(data) {

  // app = Sparkiz.force("#visFrame", 950 ,900, "black")
  app = flownet.force("#visFrame", 950 ,900, "black",0)
      .nodes(data.nodes)
      .links(data.links)

      .layout("linkDistance", 200)
      .create_layout()
      .tracks("count", 1 )

      .create_WEBGL_element()

      .link_properties("curvature", 5)
      .link_properties("color", "#b5b5b5")
      .link_properties("size", 3)


      .node_properties("color", "#999797")
      .node_properties("size", 7)
      //.nodes_mapping("label", function(d, i) {return d.id; })

      // .roads_mapping("opacity", 0)
      // .roads_mapping("color", "#66c2a5")

      .controls(false)
      .node_properties("x", function(d, i) {return d.X; })
      .node_properties("y", function(d, i) {return - d.Y;  })
      // // .nodes_mapping("x", function(d, i) {console.log("D VALUE", d); return d.px; })
      // .nodes_mapping("y", function(d, i) {return d.py;  })
      // // .particle_mapping("color", function(d, i) {return color_scale(d.speed); })
      .particles("color", function(d, i) {return d.color; })
      .particles("size", function(d, i) {return d.sizeParticule; })
      .particles("frequency", function(d, i) {return d.frequency; })
      .particles("pattern", function(d, i) {return d.temporal; })
      .particles("speed", function(d, i) {return d.speed; })

      .particles("texture", function(d, i) {return "images/"+ d.shape +"_texture.png";})
      .on("end", function() { launch_timer(); })
      .start_particle_delay(10000)
      .start(0);
      // setTimeout(function(){
      //     for (var k=0; k<app.sparkiz.links.length; k++){
      //       var d = app.sparkiz.links[k];
      //       var source = d.source;
      //       var target = d.target;
      //       var x1 = d.source.X;
      //       var y1 = d.source.Y;
      //       var x2 = d.target.X;
      //       var y2 = d.target.Y;
      //
      //       var distance = Math.sqrt( (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) );
      //
      //       console.log(source.id,",", target.id, ",",distance)
      //     }
      //   }, 500);

   });




   $( "#close_popup" ).click(function() {
      d3.select('#popup1').style("display","none");
  });
   $( "#next_trial" ).click(function() {
		 send_data();
   });


  var count = 46;

  function launch_timer(){
      var counter = setInterval(function timerDown() {
        count = count - 1;
        if (count === -1) {
           clearInterval(counter);
           clearCanvas();
           return;
         }

         var seconds = count % 60,
           minutes = Math.floor(count / 60),
           hours = Math.floor(minutes / 60);
           minutes %= 60;
           hours %= 60;

           if ( minutes < 10) { minutes = '0' + minutes;}
           if ( hours < 10 ) { hours = '0' + hours; }
           if ( seconds < 10 ) {seconds = '0' + seconds;}
           document.getElementById("count_down").innerHTML = hours + ":" + minutes + ":" + seconds;

         } , 1000)
  }
  // Permet de supprimer le canvas
  function clearCanvas(){

      for( var i = app.sparkiz.scene.children.length - 1; i >= 0; i--) {
        obj = app.sparkiz.scene.children[i];
        if (obj.name == "links") app.sparkiz.scene.remove(obj);
        if (obj.name == "roads") app.sparkiz.scene.remove(obj);
        if (obj.name.slice(0, 4) ==  "tube") app.sparkiz.scene.remove(obj);
        if (obj.name.slice(0, 15) == "particle_system") app.sparkiz.scene.remove(obj);
        if (obj.name == "circle") app.sparkiz.scene.remove(obj);
        if (obj.name == "label") app.sparkiz.scene.remove(obj);
      }
      app.sparkiz.links = []
      app.sparkiz.tube = []

  }

   function send_data(){
			//console.log(dat)

			/***** RECUPERE LES DONNEEEES *******/
			var URL = window.location.href;
			var res = URL.split("/");
			var next_app = parseInt(res[res.length-1]);

			var number_groups = $('#number_groups').val();
			var data = {"number_of_groups":number_groups, "redirection":next_app};

      number_groups = parseInt(number_groups);
      console.log(number_groups, Number.isInteger(number_groups));

  		if (number_groups != "" && Number.isInteger(number_groups) == true){
				$.ajax({
				 url: '/store_data_counting_group',
				 type: "POST",
				 dataType: "json",
				 data: data,
				 //success: function (data) {console.log("RESULT", data); window.location = data.redirection;},
				 success: function (data) {console.log("RESULT", "data"); window.location = data.redirection;},
				 error: function (xhr, status, error) {console.log('Error: ' + error.message);},
				});
			}
      else if (number_groups == ""){
        d3.select('#popup1').style("display","block");
        $( "#entry").text(" There is anything")
      }
      else if (Number.isInteger(number_groups) == false){
        d3.select('#popup1').style("display","block");
        $( "#entry").text(" It's not a number ...")
      }



   }




	</script>



</html>
